{"version":3,"sources":["api/socket.js","api/Auth.js","api/Game.js","api/GameLobby.js","api/MainLobby.js","containers/Main/route.js","containers/Main/Home.js","containers/Game/GeneralGameInfo.js","containers/Game/ZoomModal.js","containers/Game/GameView.js","components/Chat/ChatLog.js","components/Chat/ChatInput.js","containers/Game/GameChat.js","containers/Game/route.js","containers/Game/Game.js","components/NavigationBar/index.js","containers/Lobby/Game/PlayerStatus.js","containers/Lobby/Game/route.js","containers/Lobby/Game/GameLobby.js","containers/Lobby/Main/GameLobbyListItem.js","containers/Lobby/Main/GameLobbyList.js","containers/Lobby/Main/route.js","containers/Lobby/Main/MainLobby.js","containers/Error/route.js","containers/Error/NotFound.js","components/Banner/index.js","containers/Auth/Register/route.js","containers/Auth/Register/Register.js","containers/Auth/Login/route.js","containers/Auth/Login/Login.js","containers/Auth/ForgotPassword/route.js","containers/Auth/ForgotPassword/ForgotPassword.js","containers/Auth/NewPassword/route.js","containers/Auth/NewPassword/NewPassword.js","routes.js","contexts/NotificationContext.js","App.js","serviceWorker.js","index.js","api/index.js","api/request.js","api/resolvePendingPromise.js","components/NavigationBar/header_logo.png","components/Banner/header_logo.png"],"names":["io","require","module","exports","connect","request","jsonify","response","json","getLogin","getRegister","getForgotPassword","postLogin","email","password","then","postRegister","name","postForgotPassword","postLogout","getGame","gameId","concat","postGameChat","_ref","roomId","message","postGameClick","clickInput","postGameEndTurn","postGameForfeit","postGameJoin","postGameStartGame","postGameUpdate","resolvePendingPromise","getGameLobby","getGameLobbyInfo","getGameLobbyPlayersStatus","postGameLobbyChat","postGameLobbyEnter","postGameLobbyJoin","postGameLobbyLeave","postGameLobbyStart","postGameLobbyTogglePlayerReady","getMainLobby","postMainLobby","postMainLobbyChat","postMainLobbyCreateGame","playerCapacity","MainRoute","path","exact","component","react_default","a","createElement","container_default","routes","map","route","style","margin","className","href","Component","GeneralGameInfo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onOptionChange","evt","setState","option","target","value","onPromptOptionsSubmit","preventDefault","state","_this$props","card","onEndTurn","onForfeit","general_info","prompts_info","console","log","section_default","image_default","src","process","type","padding","turnCount","currentPlayer","cardsPlayed","promptMessage","promptPlayer","id","onSubmit","components_form","options","onChange","i","key","button_default","onClick","ZoomModal","show","open","close","modal_default","assign","onClose","modal","children","defaultProps","getPileTitle","cards","bank_cards","property_cards","building_cards","action_cards","set","total","Array","isArray","s","c","getTotalValue","renderStack","tile_default","kind","size","box_default","level_default","renderAs","Side","align","Item","Game_ZoomModal","alt","renderCardsModalView","card_default","overflowX","PileView","stack","length","Header","Title","Content","mainColor","cardFrequencies","house","hotel","keys","frequencies","1","2","3","4","5","10","renderPileViewComponents","paddingRight","PlayerField","player_info","PlayerHand","_ref2","HandView","hand","handleClick","justifyContent","PlayerView","_ref3","_ref3$showHand","showHand","GameView_PlayerField","GameView_PlayerHand","PlayerViews","_ref4","players_info","userId","ColumnSizes","columns_default","j","Column","GameView_PlayerView","filter","e","MiddleFieldView","_ref5","deckCount","discard","alignItems","marginLeft","marginRight","GameView","onHandCardClicked","me","player","height","display","flexDirection","GameView_PlayerViews","GameView_MiddleFieldView","ChatLog","onMessageReceived","bind","assertThisInitialized","socket","on","ps","PerfectScrollbar","ReactDOM","findDOMNode","_","update","ChatInput","checked","defineProperty","api","placeholder","GameChat","match","params","Chat_ChatLog","Chat_ChatInput","Game","GameRoute","componentDidMount","GameAPI","ok","text","body","JSON","parse","userName","host","load","window","location","onGameUpdate","data","onGameForfeit","toast","onStartGame","onStartGameNotifyAll","start_game","handleForfeit","handleHandCardClicked","cardClicked","handleEndTurn","game_socket","_this$state","Game_GameView","Game_GeneralGameInfo","Game_GameChat","NavigationBar","title","navbar_default","color","Brand","header_logo","Menu","Container","heading_default","position","Link","Dropdown","Auth","result","error","PlayerStatus","status","nameList","tag_default","readyList","ready","GameLobbyRoute","GameLobby","onEnterGame","onLeaveGame","onPlayerReady","onPlayerUnready","onStart","onReady","onExit","lobbyName","startRender","playersStatus","GameLobbyAPI","_this2","playerStatus","Players","event","_this3","players_status","temp","components_NavigationBar","Game_PlayerStatus","GameLobbyListItem","onEnter","onJoin","gameLobby","playerList","actionButton","hasJoined","playerNum","playerCap","GameLobbyList","gameLobbyListItems","gameLobbies","Main_GameLobbyListItem","MainLobbyRoute","MainLobby","onCreate","MainLobbyAPI","onPlayerCapacityChange","onCreateGame","onEndGame","onJoinGame","lobbies","promise","baseState","game","info","player_cap","newRoom","_this4","index","_this5","parseInt","splice","Main_GameLobbyList","ErrorRoute","Banner","hero_default","Body","columns_columns_default","offset","width","RegisterRoute","modal_display","modal_message","errors","onModalClick","container_container_default","components_Banner","closeOnEsc","closeOnBlur","backgroundColor","LoginRoute","icon_default","icon","ForgotPasswordRoute","error_message","NewPasswordRoute","toConsumableArray","NotificationContext","React","createContext","NotificationProvider","Consumer","notify","Provider","App","Fragment","NotificationContext_NotificationProvider","BrowserRouter","renderRoutes","lib","Boolean","hostname","render","src_App","document","getElementById","navigator","serviceWorker","registration","unregister","endpoint","method","arguments","undefined","fetch","build_url","config","credentials","headers","Content-Type","stringify","requestConfiguration","__webpack_require__","p"],"mappings":"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","file":"static/js/main.6333e774.chunk.js","sourcesContent":["const io = require('socket.io-client');\r\n//const serverAddress = require('./serverAddress');\r\n\r\nmodule.exports = io.connect('https://team-h.herokuapp.com/');\r\n","const request = require('./request');\r\n\r\nconst jsonify = response => response.json();\r\n\r\nmodule.exports = {\r\n  getLogin: () => request('/login', {}, 'get'),\r\n  getRegister: () => request('/register', {}, 'get'),\r\n  getForgotPassword: () => request('/forgot-password', {}, 'get'),\r\n  postLogin: (email, password) =>\r\n    request('/login', { email, password }).then(jsonify),\r\n  postRegister: (name, email, password) =>\r\n    request('/register', { name, email, password }),\r\n  postForgotPassword: email => request('/forgot-password', { email }),\r\n  postLogout: () => request('/logout', {})\r\n}","const request = require('./request');\r\n\r\nmodule.exports = {\r\n    getGame: gameId => request(`/game/${gameId}`, {}, 'get'),\r\n    postGameChat: ({ roomId: gameId, message }) =>\r\n    request(`/game/${gameId}/chat`, { message }),\r\n    postGameClick: (gameId, clickInput) =>\r\n    request(`/game/${gameId}/click`, { clickInput }),\r\n    postGameEndTurn: gameId => request(`/game/${gameId}/endTurn`, {}),\r\n    postGameForfeit: gameId => request(`/game/${gameId}/forfeit`, {}),\r\n    postGameJoin: gameId => request(`/game/${gameId}/join`, {}),\r\n    postGameStartGame: gameId => request(`/game/${gameId}/startGame`, {}),\r\n    postGameUpdate: gameId => request(`/game/${gameId}/update`, {})\r\n}","const request = require('./request');\r\nconst resolvePendingPromise = require('./resolvePendingPromise');\r\n\r\nmodule.exports = {\r\n    getGameLobby: gameId => request(`/game-lobby/${gameId}`, {}, 'get'),\r\n    getGameLobbyInfo: gameId =>\r\n      request(`/game-lobby/${gameId}/info`, {}, 'get').then(\r\n        resolvePendingPromise\r\n      ),\r\n    getGameLobbyPlayersStatus: gameId =>\r\n      request(`/game-lobby/${gameId}/status`, {}, 'get').then(\r\n        resolvePendingPromise\r\n      ),\r\n    postGameLobbyChat: ({ roomId: gameId, message }) =>\r\n      request(`/game-lobby/${gameId}/chat`, { message }),\r\n    postGameLobbyEnter: gameId => request(`/game-lobby/${gameId}/enter`, {}),\r\n    postGameLobbyJoin: gameId =>\r\n      request(`/game-lobby/${gameId}/join`, {}).then(resolvePendingPromise),\r\n    postGameLobbyLeave: gameId =>\r\n      request(`/game-lobby/${gameId}/leave`, {}).then(resolvePendingPromise),\r\n    postGameLobbyStart: gameId =>\r\n      request(`/game-lobby/${gameId}/start`, {}).then(resolvePendingPromise),\r\n    postGameLobbyTogglePlayerReady: gameId =>\r\n      request(`/game-lobby/${gameId}/toggle-ready`).then(resolvePendingPromise)\r\n}","const request = require('./request');\r\nconst resolvePendingPromise = require('./resolvePendingPromise');\r\n\r\nmodule.exports = {\r\n    getMainLobby: () => request('/main-lobby', {}, 'get'),\r\n    postMainLobby: () => request('/main-lobby', {}).then(resolvePendingPromise),\r\n    postMainLobbyChat: ({ message }) => request('/main-lobby/chat', { message }),\r\n    postMainLobbyCreateGame: playerCapacity =>\r\n    request('/main-lobby/create-game', { playerCapacity }).then(\r\n        resolvePendingPromise\r\n    )\r\n}","import Home from './Home';\n\nconst MainRoute = [\n  {\n    path: '/',\n    exact: true,\n    component: Home\n  }\n];\n\nexport default MainRoute;\n","import React, { Component } from 'react';\nimport Container from 'react-bulma-components/lib/components/container';\n\nimport routes from '../../routes';\n\nclass Home extends Component {\n  render() {\n    return (\n      <Container>\n        <h1>Using the homepage to test the ui easier, delete later</h1>\n        <ul>\n          {routes.map(route => (\n            <li style={{ margin: '15px' }}>\n              <a className=\"button\" href={`${route.path}`}>\n                {route.component.name}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </Container>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport Image from 'react-bulma-components/lib/components/image';\nimport Button from 'react-bulma-components/lib/components/button';\nimport Section from 'react-bulma-components/lib/components/section';\nimport {\n  Control,\n  Field,\n  Label,\n  Select\n} from 'react-bulma-components/lib/components/form';\n\n// import { NotificationConsumer } from '../../contexts/NotificationContext';\n\nclass GeneralGameInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      option: 0\n    };\n  }\n\n  onOptionChange = evt => {\n    this.setState({\n      option: evt.target.value\n    });\n  };\n\n  onPromptOptionsSubmit = evt => {\n    evt.preventDefault();\n    this.props.onPromptOptionsSubmit(this.state.option);\n    this.setState({ option: 0 });\n  };\n\n  render() {\n    const {\n      card,\n      onEndTurn,\n      onForfeit,\n      general_info,\n      prompts_info\n    } = this.props;\n\n    console.log('PROMPTS_INFO_!', prompts_info);\n\n    return (\n      <Section>\n        <Section>\n          <Image\n            src={\n              process.env.PUBLIC_URL + `/cards/${card.type}/${card.name}.jpg`\n            }\n          />\n        </Section>\n        <Section style={{ padding: '12px' }}>\n          <p>Turn: {general_info.turnCount}</p>\n          <p>Current Player: {general_info.currentPlayer}</p>\n          <p>Cards Played: {general_info.cardsPlayed}</p>\n        </Section>\n        <Section style={{ padding: '12px' }}>\n          <p>Prompt</p>\n          <p>{prompts_info.promptMessage}</p>\n          <p>{prompts_info.promptPlayer.id}</p>\n          <form onSubmit={this.onPromptOptionsSubmit}>\n            <Field>\n              <Label>Options:</Label>\n              {prompts_info.options ? (\n                <Select\n                  onChange={this.onOptionChange}\n                  value={this.state.option}\n                >\n                  {prompts_info.options.map((option, i) => {\n                    return <option key={i} value={i}>{option}</option>;\n                  })}\n                </Select>\n              ) : (\n                <input onChange={this.onOptionChange} />\n              )}\n              <Field>\n                <Control>\n                  <Button className=\"is-info is-fullwidth\">Send</Button>\n                </Control>\n              </Field>\n            </Field>\n          </form>\n        </Section>\n        <Section style={{ padding: '12px' }}>\n          <Button onClick={onEndTurn}>End Turn</Button>\n          <Button onClick={onForfeit}>Forfeit</Button>\n        </Section>\n      </Section>\n    );\n  }\n}\n\nexport default GeneralGameInfo;\n","import React, { Component } from 'react';\n\nimport Modal from 'react-bulma-components/lib/components/modal';\nimport Button from 'react-bulma-components/lib/components/button';\n\nclass ZoomModal extends Component {\n  static defaultProps = {\n    modal: {}\n  };\n\n  state = {\n    show: false\n  };\n\n  open = () => this.setState({ show: true });\n  close = () => this.setState({ show: false });\n\n  render() {\n    return (\n      <div>\n        <Button onClick={this.open}>+</Button>\n        <Modal\n          show={this.state.show}\n          onClose={this.close}\n          {...this.props.modal}\n        >\n          {this.props.children}\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ZoomModal;\n","import React, { Component } from 'react';\nimport Image from 'react-bulma-components/lib/components/image';\nimport Columns from 'react-bulma-components/lib/components/columns';\nimport Level from 'react-bulma-components/lib/components/level';\nimport Box from 'react-bulma-components/lib/components/box';\nimport Tile from 'react-bulma-components/lib/components/tile';\nimport Card from 'react-bulma-components/lib/components/card';\n\nimport ZoomModal from './ZoomModal';\n\nconst getTotalValue = set => {\n  let total = 0;\n  if (Array.isArray(set[0])) {\n    set.map(s => s.map(c => (total += c.value)));\n  } else {\n    set.map(c => (total += c.value));\n  }\n  return total;\n};\n\nconst getPileTitle = (cards, type) =>\n  `${\n    {\n      bank_cards: '🏦',\n      property_cards: '🏠',\n      building_cards: '🏢',\n      action_cards: '🚴‍'\n    }[type]\n  } $${getTotalValue(cards)}`;\n\nconst renderPileViewComponents = (cards, type) => {\n  let PileView;\n\n  if (type === 'property_cards') {\n    PileView = cards.map((stack, i) => {\n      if (stack.length) {\n        return (\n          <Card key={i}>\n            <Card.Header>\n              <Card.Header.Title>{stack.length}</Card.Header.Title>\n            </Card.Header>\n            <Card.Content className={stack[0].mainColor}>P</Card.Content>\n          </Card>\n        );\n      } else {\n        return <div>[]</div>;\n      }\n    });\n  } else if (type === 'building_cards') {\n    const cardFrequencies = { house: 0, hotel: 0 };\n    // calculate frequencies for each card\n    cards.map(c => cardFrequencies[c.name]++);\n    const keys = Object.keys(cardFrequencies);\n    PileView = keys.map((key, i) => {\n        return (\n          <Card key={i}>\n            <Card.Header>\n              <Card.Header.Title>{cardFrequencies[key]}</Card.Header.Title>\n            </Card.Header>\n            <Card.Content>{key}</Card.Content>\n          </Card>\n        );\n    });\n  } else if (type === 'action_cards') {\n    PileView =\n      cards.length === 0\n        ? []\n        : cards.map((card, i) => (\n            <Card key={i}>\n              <Card.Header>\n                <Card.Header.Title>{card.name}</Card.Header.Title>\n              </Card.Header>\n              <Card.Content>{card.mainColor || '_'}</Card.Content>\n            </Card>\n          ));\n  } else if (type === 'bank_cards') {\n    const frequencies = { 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 10: 0 };\n    cards.map(c => frequencies[c.value]++);\n    const valueCards = Object.keys(frequencies);\n    PileView = valueCards.map((card, i) => (\n      <Card key={i}>\n        <Card.Header>\n          <Card.Header.Title>{frequencies[card]}</Card.Header.Title>\n        </Card.Header>\n        <Card.Content>${card}</Card.Content>\n      </Card>\n    ));\n  }\n\n  return PileView;\n};\n\nconst renderCardsModalView = cards => {\n  return Array.isArray(cards[0]) ? (\n    <div>\n      {cards.map(set => (\n        <div>\n          {set.map((card, i) => (\n            <Image key = {i}\n              src={\n                process.env.PUBLIC_URL + `/cards/${card.type}/${card.name}.jpg`\n              }\n              alt=\"card\"\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  ) : (\n    <div>\n      {cards.map((card, i) => (\n        <Image key={i}\n          src={process.env.PUBLIC_URL + `/cards/${card.type}/${card.name}.jpg`}\n          alt=\"card\"\n        />\n      ))}\n    </div>\n  );\n};\n\nconst renderStack = (cards, type) => {\n  return (\n    <Tile\n      kind=\"child\"\n      size={type === 'property_cards' || type === 'bank_cards' ? 4 : 2}\n    >\n      <Box>\n        <Level renderAs=\"nav\">\n          <Level.Side align=\"left\">\n            <Level.Item>{getPileTitle(cards, type)}</Level.Item>\n          </Level.Side>\n          <Level.Side align=\"right\">\n            <Level.Item>\n              <ZoomModal>{renderCardsModalView(cards)}</ZoomModal>\n            </Level.Item>\n          </Level.Side>\n        </Level>\n        <Card style={{ overflowX: 'auto' }}>\n          <Tile>\n            {renderPileViewComponents(cards, type).map((card, i) => (\n              <Tile key={i} style={{ paddingRight: 8 }}>{card}</Tile>\n            ))}\n          </Tile>\n        </Card>\n      </Box>\n    </Tile>\n  );\n};\n/*\nconst displayHandCount = cards => {\n  return (\n    <Tile kind=\"child\" size={0.5}>\n      <Card style={{ overflowX: 'auto' }}>Hand: {cards.length}</Card>\n    </Tile>\n  );\n};\n*/\n\nconst PlayerField = ({ player_info }) => {\n  return (\n    <Tile kind=\"parent\" size={12}>\n      {/* {displayHandCount(player_info.hand)} */}\n      {renderStack(player_info.bank_cards, 'bank_cards')}\n      {renderStack(player_info.property_cards, 'property_cards')}\n      {renderStack(player_info.action_cards, 'action_cards')}\n      {renderStack(player_info.building_cards, 'building_cards')}\n    </Tile>\n  );\n};\n\nconst PlayerHand = ({ hand, handleClick }) => {\n  let HandView;\n  if (Array.isArray(hand)) {\n    HandView = hand.map((card, i) => {\n      return (\n        <Tile key={i} kind=\"child\" size={1}>\n          <h1>{card.id}</h1>\n          <Image\n            onClick={() => handleClick(card)}\n            src={\n              process.env.PUBLIC_URL + `/cards/${card.type}/${card.name}.jpg`\n            }\n            alt=\"hand-card\"\n          />\n        </Tile>\n      );\n    });\n  } else {\n    HandView = <div>#Cards: {hand}</div>;\n  }\n\n  return (\n    <Tile kind=\"parent\" size={12} style={{ justifyContent: 'center' }}>\n      {HandView}\n    </Tile>\n  );\n};\n\nconst PlayerView = ({ player_info, showHand = false, handleClick }) => {\n  return (\n    <div>\n      <Tile kind=\"ancestor\">\n        <PlayerField player_info={player_info} />\n      </Tile>\n      {showHand ? (\n        <Tile kind=\"ancestor\">\n          <PlayerHand hand={player_info.hand} handleClick={handleClick} />\n        </Tile>\n      ) : null}\n    </div>\n  );\n};\n\n// Calculate how to render other players\nconst PlayerViews = ({ players_info, userId }) => {\n  const ColumnSizes = {\n    2: [12],\n    3: [6, 6],\n    4: [6, 6, 10],\n    5: [6, 6, 6, 6]\n  };\n\n  console.log(players_info);\n  let i = 0;\n\n  return (\n    <Columns>\n      {\n        players_info.map((player_info, j) => {\n          if (!(player_info.id === userId)) {\n            return (\n              <Columns.Column\n                key={j}\n                size={ColumnSizes[players_info.length][i++]}\n                style={{ margin: '0 auto' }}\n              >\n                <PlayerView player_info={player_info} />\n              </Columns.Column>\n            );\n          } else {\n            return null;\n          }\n        }).filter(e => null !== e)\n      }\n    </Columns>\n  );\n};\n\n// Render deck and discard pile\nconst MiddleFieldView = ({ deckCount, discard }) => {\n  return (\n    <Tile\n      kind=\"ancestor\"\n      style={{\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginLeft: 0,\n        marginRight: 0\n      }}\n      className=\"has-background-grey-darker\"\n    >\n      <Tile kind=\"parent\" size={1}>\n        <Tile kind=\"child\" style={{ padding: 2 }}>\n          <Box>{deckCount}</Box>\n        </Tile>\n        <Tile kind=\"child\" style={{ padding: 2 }}>\n          <Image\n            src={process.env.PUBLIC_URL + '/cards/spawned.jpg'}\n            alt=\"Discard\"\n          />\n        </Tile>\n      </Tile>\n    </Tile>\n  );\n};\n\nclass GameView extends Component {\n\n  render() {\n    const {\n      userId,\n      players_info,\n      general_info,\n      onHandCardClicked\n    } = this.props;\n    const me = players_info.filter(player => player.id === userId)[0];\n\n    return (\n      <div\n        className=\"has-background-white-ter\"\n        style={{\n          height: '100%',\n          display: 'flex',\n          justifyContent: 'center',\n          flexDirection: 'column',\n          alignItems: 'stretch',\n          padding: 8\n        }}\n      >\n        <PlayerViews players_info={players_info} userId={userId} />\n        <MiddleFieldView\n          deckCount={general_info.deckCount}\n          discard={general_info.discard}\n        />\n        <PlayerView\n          player_info={me}\n          showHand={true}\n          handleClick={onHandCardClicked}\n        />\n      </div>\n    );\n  }\n}\n\nexport default GameView;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PerfectScrollbar from 'perfect-scrollbar';\n\nimport Box from 'react-bulma-components/lib/components/box';\n\nimport 'perfect-scrollbar/css/perfect-scrollbar.css';\n\nclass ChatLog extends Component {\n  constructor(props) {\n    super(props);\n    this.onMessageReceived = this.onMessageReceived.bind(this);\n    this.props.socket.on(this.props.roomId, this.onMessageReceived);\n    this.state = {\n      log: []\n    };\n  }\n\n  componentDidMount() {\n    this.ps = new PerfectScrollbar(ReactDOM.findDOMNode(this));\n  }\n\n  componentDidUpdate(_) {\n    this.ps.update();\n  }\n\n  onMessageReceived(message) {\n    this.setState({\n      log: this.state.log.concat(message)\n    });\n  }\n\n  render() {\n    return (\n      <Box>\n        {this.state.log.map((message, i) => (\n          <p key={i}> {message} </p>\n        ))}\n      </Box>\n    );\n  }\n}\n\nexport default ChatLog;\n","import React, { Component } from 'react';\n\nimport Box from 'react-bulma-components/lib/components/box';\nimport Button from 'react-bulma-components/lib/components/button';\nimport {\n  Control,\n  Field,\n  Input\n} from 'react-bulma-components/lib/components/form';\n\nclass ChatInput extends Component {\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      message: ''\n    };\n  }\n\n  onChange = evt => {\n    const value =\n      evt.target.type === 'checkbox' ? evt.target.checked : evt.target.value;\n    this.setState({\n      [evt.target.name]: value\n    });\n  };\n\n  onSubmit = evt => {\n    evt.preventDefault();\n    this.props.api({ roomId: this.props.roomId, message: this.state.message });\n    this.setState({ message: '' });\n  };\n\n  render() {\n    const { message } = this.state;\n    return (\n      <Box>\n        <form onSubmit={this.onSubmit}>\n          <Field className=\"has-addons\">\n            <Control className=\"is-expanded\">\n              <Input\n                name=\"message\"\n                type=\"text\"\n                onChange={this.onChange}\n                value={message}\n                placeholder=\"Type your message\"\n              />\n            </Control>\n            <Control>\n              <Button className=\"is-info\">Send</Button>\n            </Control>\n          </Field>\n        </form>\n      </Box>\n    );\n  }\n}\n\nexport default ChatInput;\n","import React, { Component } from 'react';\n\nimport ChatLog from '../.../../../components/Chat/ChatLog';\nimport ChatInput from '../.../../../components/Chat/ChatInput';\n\nimport { socket, Game } from './../../api';\n\nclass GameChat extends Component {\n\n  render() {\n    let gameId = this.props.match.params.id;\n    return (\n      <div className=\"gamechat\">\n        <ChatLog socket={socket} roomId={`game:${gameId}:chat`} />\n        <ChatInput roomId={gameId} api={Game.postGameChat} />\n      </div>\n    );\n  }\n}\n\nexport default GameChat;\n","import Game from './Game';\n\nconst GameRoute = [\n  {\n    path: '/game/:id',\n    exact: true,\n    component: Game\n  }\n];\n\nexport default GameRoute;\n","import React, { Component } from 'react';\n\nimport Columns from 'react-bulma-components/lib/components/columns';\nimport Container from 'react-bulma-components/lib/components/box';\nimport Button from 'react-bulma-components/lib/components/button';\nimport { toast } from 'react-toastify';\n\nimport GeneralGameInfo from './GeneralGameInfo';\nimport GameView from './GameView';\nimport GameChat from './GameChat';\nimport { socket, Game as GameAPI } from '../../api';\n\nimport './Game.css';\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.onStartGame = this.onStartGame.bind(this);\n    this.onGameUpdate = this.onGameUpdate.bind(this);\n    this.state = {\n      userId: null,\n      userName: null,\n      game_socket: socket,\n      host: false,\n      start_game: false,\n      load: false,\n      data: {},\n      cardClicked: {}\n    };\n    let gameId = this.props.match.params.id;\n    GameAPI.postGameJoin(gameId);\n    socket.on(`game:${gameId}:start-game`, this.onStartGameNotifyAll);\n    socket.on(`game:${gameId}:game-update`, this.onGameUpdate);\n    socket.on(`game:${gameId}:game-forfeit`, this.onGameForfeit);\n\n    this.handleEndTurn = this.handleEndTurn.bind(this);\n    this.handleForfeit = this.handleForfeit.bind(this);\n  }\n\n  componentDidMount = () => {\n    GameAPI.getGame(this.props.match.params.id).then(response => {\n      if (response.ok) {\n        response.text().then(body => {\n          body = JSON.parse(body);\n          this.setState({\n            userId: body.id,\n            userName: body.name,\n            host: body.host,\n            load: true\n          });\n        });\n      } else {\n        window.location = '/login';\n      }\n    });\n  };\n\n  onGameUpdate = data => {\n    if (data) {\n      this.setState({ data });\n    }\n  };\n\n  onGameForfeit = message => {\n    toast(message);\n  };\n\n  onStartGame = _ => {\n    GameAPI.postGameStartGame(this.props.match.params.id).then(_ =>\n      GameAPI.postGameUpdate(this.props.match.params.id)\n    );\n  };\n\n  onStartGameNotifyAll = _ => {\n    this.setState({ start_game: true });\n  };\n\n  onPromptOptionsSubmit = value => {\n    GameAPI.postGameClick(this.props.match.params.id, value);\n  };\n\n  handleForfeit = _ => {\n    GameAPI.postGameForfeit(this.props.match.params.id);\n    window.location = '/main-lobby';\n  };\n\n  handleHandCardClicked = card => {\n    this.setState({ cardClicked: card });\n  };\n\n  handleEndTurn = _ => {\n    GameAPI.postGameEndTurn(this.props.match.params.id);\n  };\n\n  render() {\n    const { start_game, load, host, data, cardClicked } = this.state;\n\n    if (load) {\n      if (start_game && data.players_info) {\n        console.log('data is: ', data);\n        return (\n          <Columns>\n            <Columns.Column size={10}>\n              <GameView\n                userId={this.state.userId}\n                general_info={data.general_info}\n                players_info={data.players_info}\n                onHandCardClicked={this.handleHandCardClicked}\n              />\n            </Columns.Column>\n            <Columns.Column size={2}>\n              <GeneralGameInfo\n                card={cardClicked}\n                general_info={data.general_info}\n                prompts_info={data.prompts_info}\n                onPromptOptionsSubmit={this.onPromptOptionsSubmit}\n                onEndTurn={this.handleEndTurn}\n                onForfeit={this.handleForfeit}\n              />\n              <GameChat match={this.props.match} />\n            </Columns.Column>\n          </Columns>\n        );\n      } else if (host) {\n        return (\n          <Container>\n            <Button onClick={this.onStartGame}>Start Game</Button>\n          </Container>\n        );\n      } else {\n        return (\n          <Container>\n            <Button onClick={this.onStartGame}>\n              Waiting for host to start game...\n            </Button>\n          </Container>\n        );\n      }\n    } else {\n      return <div>Loading</div>;\n    }\n  }\n}\n\nexport default Game;\n","import React from 'react';\nimport Navbar from 'react-bulma-components/lib/components/navbar';\nimport Heading from 'react-bulma-components/lib/components/heading';\nimport header_logo from './header_logo.png';\nimport { Auth } from './../../api';\n\nconst NavigationBar = ({ title }) => {\n  const logout = () => {\n    Auth.postLogout().then(result => {\n      if (result.error) {\n        console.log('error on logout');\n      }\n      if (result.ok) {\n        window.location = '/login';\n      }\n    });\n  };\n\n  return (\n    <Navbar color=\"success\">\n      <Navbar.Brand>\n        <Navbar.Item className=\"is-paddingless\" renderAs=\"a\" href=\"/login\">\n          <img src={header_logo} alt=\"\" />\n        </Navbar.Item>\n      </Navbar.Brand>\n      <Navbar.Menu>\n        <Navbar.Container>\n          <Navbar.Item href=\"#\">Monopoly Deal</Navbar.Item>\n        </Navbar.Container>\n        <Navbar.Container>\n          <Navbar.Item renderAs=\"div\">\n            <Heading size={3}>{title}</Heading>\n          </Navbar.Item>\n        </Navbar.Container>\n        <Navbar.Container position=\"end\">\n          <Navbar.Item renderAs=\"div\" className=\"has-dropdown is-hoverable\">\n            <Navbar.Link>Username</Navbar.Link>\n            <Navbar.Dropdown className=\"is-right\">\n              <Navbar.Item value=\"item\" onClick={logout}>\n                Logout\n              </Navbar.Item>\n            </Navbar.Dropdown>\n          </Navbar.Item>\n        </Navbar.Container>\n      </Navbar.Menu>\n    </Navbar>\n  );\n};\n\nexport default NavigationBar;\n","import React, { Component } from 'react';\n\nimport Box from 'react-bulma-components/lib/components/box';\nimport Columns from 'react-bulma-components/lib/components/columns';\nimport Tag from 'react-bulma-components/lib/components/tag';\n\nclass PlayerStatus extends Component {\n  render() {\n    if (this.props.status) {\n      let nameList = this.props.status.map((player, i) => {\n        return (\n          <Tag key={i}>\n            [{player.id}]{player.name}\n          </Tag>\n        );\n      });\n      let readyList = this.props.status.map((player, i) => {\n        if (player.ready) {\n          return <Tag key={i}>Ready</Tag>;\n        } else {\n          return <Tag key={i}>Not Ready</Tag>;\n        }\n      });\n      return (\n        <Box>\n          <Columns>\n            <Columns.Column>{nameList}</Columns.Column>\n            <Columns.Column>{readyList}</Columns.Column>\n          </Columns>\n        </Box>\n      );\n    }\n    return <Box>Loading Player Status...</Box>;\n  }\n}\n\nexport default PlayerStatus;\n","import GameLobby from './GameLobby';\n\nconst GameLobbyRoute = [\n  {\n    path: '/game-lobby/:id',\n    exact: true,\n    component: GameLobby\n  }\n];\n\nexport default GameLobbyRoute;\n","import React, { Component } from 'react';\n\nimport Section from 'react-bulma-components/lib/components/section';\nimport Level from 'react-bulma-components/lib/components/level';\nimport Box from 'react-bulma-components/lib/components/box';\nimport Button from 'react-bulma-components/lib/components/button';\nimport Columns from 'react-bulma-components/lib/components/columns';\n\nimport NavigationBar from '../../../components/NavigationBar';\nimport ChatLog from '../../../components/Chat/ChatLog';\nimport ChatInput from '../../../components/Chat/ChatInput';\nimport PlayerStatus from './PlayerStatus';\n\nimport { socket, GameLobby as GameLobbyAPI } from '../../../api';\nimport { toast } from 'react-toastify';\n\nimport './GameLobby.css';\n\nclass GameLobby extends Component {\n  constructor(props) {\n    super(props);\n    this.onEnterGame = this.onEnterGame.bind(this);\n    this.onLeaveGame = this.onLeaveGame.bind(this);\n    this.onPlayerReady = this.onPlayerReady.bind(this);\n    this.onPlayerUnready = this.onPlayerUnready.bind(this);\n    this.onStartGame = this.onStartGame.bind(this);\n    this.onStart = this.onStart.bind(this);\n    this.onReady = this.onReady.bind(this);\n    this.onExit = this.onExit.bind(this);\n    let gameId = this.props.match.params.id;\n    this.state = {\n      gameId,\n      lobbyName: `${gameId}'s Lobby`,\n      startRender: false,\n      host: false,\n      userId: null,\n      userName: null,\n      playersStatus: null,\n      socket: socket\n    };\n    GameLobbyAPI.postGameLobbyEnter(gameId);\n    socket.on(`game-lobby:${gameId}:enter-game`, this.onEnterGame);\n    socket.on(`game-lobby:${gameId}:leave-game`, this.onLeaveGame);\n    socket.on(`game-lobby:${gameId}:player-ready`, this.onPlayerReady);\n    socket.on(`game-lobby:${gameId}:player-unready`, this.onPlayerUnready);\n    socket.on(`game-lobby:${gameId}:start-game`, this.onStartGame);\n  }\n\n  componentDidMount() {\n    GameLobbyAPI.getGameLobby(this.state.gameId).then(response => {\n      if (response.ok) {\n        response.text().then(body => {\n          body = JSON.parse(body);\n          this.setState({ userId: body.id });\n          this.setState({ userName: body.name });\n          GameLobbyAPI.getGameLobbyPlayersStatus(this.state.gameId).then(\n            status => {\n              status.result.map(playerStatus => {\n                if (this.state.userId === playerStatus.id) {\n                  this.setState({ host: playerStatus.Players[0].host });\n                }\n                return (playerStatus.ready = playerStatus.Players[0].ready);\n              });\n              this.setState({ playersStatus: status.result });\n              this.setState({ startRender: true });\n            }\n          );\n        });\n      } else {\n        window.location = '/main-lobby';\n      }\n    });\n  }\n\n  onEnterGame(event) {\n    if (this.state.gameId === event) {\n      GameLobbyAPI.getGameLobbyPlayersStatus(this.state.gameId).then(status => {\n        status.result.map(\n          playerStatus => (playerStatus.ready = playerStatus.Players[0].ready)\n        );\n        this.setState({ players_status: status.result });\n      });\n    }\n  }\n\n  onLeaveGame(event) {\n    if (this.state.gameId === event.gameId) {\n      var temp = this.state.playersStatus;\n      this.setState({\n        playersStatus: temp.filter(\n          playerStatus => playerStatus.id !== event.userId\n        )\n      });\n      if (this.state.userId === event.userId) {\n        window.location = '/main-lobby';\n      }\n    }\n  }\n\n  onPlayerReady(event) {\n    // TODO: refactor this array functionality to a dictionary\n    var temp = this.state.playersStatus;\n    var size = temp.length;\n    for (var i = 0; i < size; i++) {\n      if (temp[i].id === event.userId) {\n        temp[i].ready = true;\n      }\n    }\n    this.setState({ playerStatus: temp });\n  }\n\n  onPlayerUnready(event) {\n    // TODO: refactor this array functionality to a dictionary\n    var temp = this.state.playersStatus;\n    var size = temp.length;\n    for (var i = 0; i < size; i++) {\n      if (temp[i].id === event.userId) {\n        temp[i].ready = false;\n      }\n    }\n    this.setState({ playerStatus: temp });\n  }\n\n  onStartGame(_) {\n    window.location = `/game/${this.state.gameId}`;\n  }\n\n  onStart(_) {\n    GameLobbyAPI.postGameLobbyStart(this.state.gameId).then(result => {\n      if (result.message) {\n        toast(result.message);\n      }\n    });\n  }\n\n  onReady(_) {\n    GameLobbyAPI.postGameLobbyTogglePlayerReady(this.state.gameId).then(\n      result => {}\n    );\n  }\n\n  onExit(_) {\n    GameLobbyAPI.postGameLobbyLeave(this.state.gameId).then(\n      _ => (window.location = '/main-lobby')\n    );\n  }\n\n  render() {\n    if (this.state.startRender) {\n      return (\n        <Box className=\"has-background-grey-lighter\">\n          <NavigationBar title={this.state.lobbyName} />\n          <Section>\n            <Columns>\n              <Columns.Column className=\"has-background-black-ter\">\n                <PlayerStatus status={this.state.playersStatus} />\n              </Columns.Column>\n              <Columns.Column size=\"5\" className=\"game-lobby-chat\">\n                <ChatLog\n                  socket={this.state.socket}\n                  roomId={`game-lobby:${this.state.gameId}:chat`}\n                />\n              </Columns.Column>\n            </Columns>\n            <ChatInput\n              roomId={this.state.gameId}\n              api={GameLobbyAPI.postGameLobbyChat}\n            />\n          </Section>\n          <Section>\n            <Level>\n              <Level.Item>\n                {this.state.host ? (\n                  <Button onClick={this.onStart} className=\"is-large\">\n                    Start\n                  </Button>\n                ) : (\n                  <div />\n                )}\n              </Level.Item>\n              <Level.Item>\n                <Button onClick={this.onReady} className=\"is-large\">\n                  Ready\n                </Button>\n              </Level.Item>\n              <Level.Item>\n                <Button onClick={this.onExit} className=\"is-large\">\n                  Exit\n                </Button>\n              </Level.Item>\n              <Level.Item />\n            </Level>\n          </Section>\n        </Box>\n      );\n    }\n    return <Box>Loading Page...</Box>;\n  }\n}\n\nexport default GameLobby;\n","import React, { Component } from 'react';\n\nimport Box from 'react-bulma-components/lib/components/box';\nimport Button from 'react-bulma-components/lib/components/button';\nimport Columns from 'react-bulma-components/lib/components/columns';\nimport Tag from 'react-bulma-components/lib/components/tag';\n\nimport { GameLobby as GameLobbyAPI } from '../../../api';\n\nclass GameLobbyListItem extends Component {\n  constructor(props) {\n    super(props);\n    this.onEnter = this.onEnter.bind(this);\n    this.onJoin = this.onJoin.bind(this);\n  }\n\n  onEnter(_) {\n    window.location = `/game-lobby/${this.props.gameId}`;\n  }\n\n  onJoin(_) {\n    GameLobbyAPI.postGameLobbyJoin(this.props.gameId).then(response => {\n      if (response.result) {\n        window.location = `/game-lobby/${this.props.gameId}`;\n      }\n    });\n  }\n\n  render() {\n    if (this.props.gameLobby.playerList) {\n      let hasJoined = false;\n      let playerList = this.props.gameLobby.playerList.map((player, i) => {\n        if (this.props.userId === player.id) {\n          hasJoined = true;\n        }\n        return (\n          <li key={i}>\n            <Tag>{player.name}</Tag>\n          </li>\n        );\n      });\n      let actionButton;\n      if (hasJoined) {\n        actionButton = (\n          <Button onClick={this.onEnter} className=\"is-large\">\n            Enter\n          </Button>\n        );\n      } else {\n        actionButton = (\n          <Button onClick={this.onJoin} className=\"is-large\">\n            Join\n          </Button>\n        );\n      }\n      return (\n        <Box className=\"has-background-success\">\n          {this.props.gameLobby.id}\n          <Columns>\n            <Columns.Column>\n              {this.props.gameLobby.playerNum} /{' '}\n              {this.props.gameLobby.playerCap}\n            </Columns.Column>\n            <Columns.Column>{playerList}</Columns.Column>\n            <Columns.Column>{actionButton}</Columns.Column>\n          </Columns>\n        </Box>\n      );\n    }\n    return (\n      <Box>\n        Loading Lobby #{this.props.gameLobby.id}\n        's info\n      </Box>\n    );\n  }\n}\n\nexport default GameLobbyListItem;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport GameLobbyListItem from './GameLobbyListItem';\n\nimport Box from 'react-bulma-components/lib/components/box';\n\nimport 'perfect-scrollbar/css/perfect-scrollbar.css';\n\nclass GameLobbyList extends Component {\n  componentDidMount() {\n    this.ps = new PerfectScrollbar(ReactDOM.findDOMNode(this));\n  }\n\n  componentDidUpdate(_) {\n    this.ps.update();\n  }\n\n  render() {\n    let gameLobbyListItems;\n    if (this.props.gameLobbies) {\n      gameLobbyListItems = this.props.gameLobbies.map(gameLobby => {\n        return (\n          <GameLobbyListItem\n            key={gameLobby.id}\n            gameLobby={gameLobby}\n            userId={this.props.userId}\n            gameId={gameLobby.id}\n          />\n        );\n      });\n    }\n    return <Box>{gameLobbyListItems}</Box>;\n  }\n}\n\nexport default GameLobbyList;\n","import MainLobby from './MainLobby';\n\nconst MainLobbyRoute = [\n  {\n    path: '/main-lobby',\n    exact: true,\n    component: MainLobby\n  }\n];\n\nexport default MainLobbyRoute;\n","import React, { Component } from 'react';\nimport GameLobbyList from './GameLobbyList';\nimport ChatLog from '../../../components/Chat/ChatLog';\nimport ChatInput from '../../../components/Chat/ChatInput';\nimport NavigationBar from '../../../components/NavigationBar';\n\nimport Box from 'react-bulma-components/lib/components/box';\nimport Button from 'react-bulma-components/lib/components/button';\nimport Columns from 'react-bulma-components/lib/components/columns';\nimport {\n  socket,\n  MainLobby as MainLobbyAPI,\n  GameLobby as GameLobbyAPI\n} from '../../../api';\nimport {\n  Control,\n  Field,\n  Label,\n  Select\n} from 'react-bulma-components/lib/components/form';\nimport './MainLobby.css';\n\nclass MainLobby extends Component {\n  constructor(props) {\n    super(props);\n    this.onCreateGame = this.onCreateGame.bind(this);\n    this.onEndGame = this.onEndGame.bind(this);\n    this.onJoinGame = this.onJoinGame.bind(this);\n    this.onLeaveGame = this.onLeaveGame.bind(this);\n    this.onStartGame = this.onStartGame.bind(this);\n    this.onCreate = this.onCreate.bind(this);\n    this.state = {\n      startRender: false,\n      playerCapacity: 2,\n      userId: null,\n      userName: null,\n      lobbies: [],\n      socket: socket\n    };\n    socket.on('main-lobby:create-game', this.onCreateGame);\n    socket.on('main-lobby:end-game', this.onEndGame);\n    socket.on('main-lobby:join-game', this.onJoinGame);\n    socket.on('main-lobby:leave-game', this.onLeaveGame);\n    socket.on('main-lobby:start-game', this.onStartGame);\n  }\n\n  componentDidMount() {\n    MainLobbyAPI.getMainLobby().then(response => {\n      if (response.ok) {\n        response.text().then(body => {\n          body = JSON.parse(body);\n          this.setState({ userId: body.id });\n          this.setState({ userName: body.name });\n          this.setState({ startRender: true });\n          MainLobbyAPI.postMainLobby().then(promise => {\n            var baseState = promise.result;\n            baseState.map((game, i) =>\n              GameLobbyAPI.getGameLobbyInfo(game.id).then(info => {\n                baseState[i].id = game.id;\n                baseState[i].playerList = info.result;\n                baseState[i].playerNum = info.result.length;\n                baseState[i].playerCap = game.player_cap;\n                baseState[i].status = game.status;\n                this.setState({ lobbies: baseState });\n              })\n            );\n          });\n        });\n      } else {\n        window.location = '/login';\n      }\n    });\n  }\n\n  onCreateGame(event) {\n    var baseState = this.state.lobbies;\n    var newRoom = {\n      id: event.gameId,\n      playerCap: event.playerCap,\n      status: 'open'\n    };\n    GameLobbyAPI.getGameLobbyInfo(event.gameId).then(info => {\n      newRoom.playerList = info.result;\n      newRoom.playerNum = info.result.length;\n      baseState = baseState.concat(newRoom);\n      this.setState({ lobbies: baseState });\n    });\n  }\n\n  onEndGame(event) {\n    // todo\n  }\n\n  onJoinGame(event) {\n    // todo: convert this array operation to a dictionary operation\n    var length = this.state.lobbies.length;\n    var index = 0;\n    for (var i = 0; i < length; i++) {\n      if (this.state.lobbies[i].id === event.gameId) {\n        index = i;\n        break;\n      }\n    }\n    GameLobbyAPI.getGameLobbyInfo(event.gameId).then(info => {\n      var baseState = this.state.lobbies;\n      baseState[index].playerList = info.result;\n      baseState[index].playerNum = info.result.length;\n      this.setState({ lobbies: baseState });\n    });\n  }\n\n  onLeaveGame(event) {\n    // todo: convert this array operation to a dictionary operation\n    var length = this.state.lobbies.length;\n    var index = 0;\n    for (var i = 0; i < length; i++) {\n      if (this.state.lobbies[i].id === parseInt(event.gameId)) {\n        index = i;\n        break;\n      }\n    }\n    GameLobbyAPI.getGameLobbyInfo(event.gameId).then(info => {\n      var baseState = this.state.lobbies;\n      if (info.result.length) {\n        baseState[index].playerList = info.result;\n        baseState[index].playerNum = info.result.length;\n      } else {\n        baseState.splice(index, 1);\n      }\n      this.setState({ lobbies: baseState });\n    });\n  }\n\n  onStartGame(event) {\n    // todo: convert this array operation to a dictionary operation\n    var length = this.state.lobbies.length;\n    var index = 0;\n    for (var i = 0; i < length; i++) {\n      if (this.state.lobbies[i].id === parseInt(event.gameId)) {\n        index = i;\n        break;\n      }\n    }\n    var baseState = this.state.lobbies;\n    baseState.splice(index, 1);\n    this.setState({ lobbies: baseState });\n  }\n\n  onCreate = event => {\n    event.preventDefault();\n    MainLobbyAPI.postMainLobbyCreateGame(this.state.playerCapacity).then(\n      result => {\n        window.location = `/game-lobby/${result.result.id}`;\n      }\n    );\n  };\n\n  onPlayerCapacityChange = event => {\n    this.setState({\n      playerCapacity: event.target.value\n    });\n  };\n\n  render() {\n    if (this.state.startRender) {\n      return (\n        <div className=\"boxcolor\">\n          <NavigationBar title=\"Main Lobby\" />\n          <Columns>\n            <Columns.Column>\n              <GameLobbyList\n                key=\"gameLobbies\"\n                gameLobbies={this.state.lobbies}\n                userId={this.state.userId}\n              />\n              <Box>\n                <form onSubmit={this.onCreate}>\n                  <Label>Choose player capacity:</Label>\n                  <Field className=\"is-grouped\">\n                    <Select\n                      onChange={this.onPlayerCapacityChange}\n                      value={this.state.playerCapacity}\n                    >\n                      <option value={2}>2</option>\n                      <option value={3}>3</option>\n                      <option value={4}>4</option>\n                      <option value={5}>5</option>\n                    </Select>\n                    <Control>\n                      <Button className=\"is-info\" type=\"submit\">\n                        Make a Room\n                      </Button>\n                    </Control>\n                  </Field>\n                </form>\n              </Box>\n            </Columns.Column>\n            <Columns.Column className=\"main-lobby-chat is-two-fifths\">\n              <ChatLog socket={this.state.socket} roomId={'main-lobby:chat'} />\n              <ChatInput roomId={null} api={MainLobbyAPI.postMainLobbyChat} />\n            </Columns.Column>\n          </Columns>\n        </div>\n      );\n    }\n    return <Box>Loading Page...</Box>;\n  }\n}\n\nexport default MainLobby;\n","import NotFound from './NotFound';\n\nconst ErrorRoute = [\n  {\n    path: '/404',\n    exact: true,\n    component: NotFound\n  }\n];\n\nexport default ErrorRoute;\n","import React, { Component } from 'react';\n\nclass NotFound extends Component {\n  render() {\n    return <div>404</div>;\n  }\n}\n\nexport default NotFound;\n","import React from 'react';\nimport Hero from 'react-bulma-components/lib/components/hero';\nimport Columns from 'react-bulma-components/lib/components/columns/columns';\nimport header_logo from './header_logo.png';\nimport Image from 'react-bulma-components/lib/components/image';\nimport './banner.css';\n\nconst Banner = () => {\n  return (\n    <Hero className=\"is-success is-small\">\n      <Hero.Body>\n        <Columns className=\"is-centered\">\n          <Columns.Column className=\"is-centered imgSize\" offset={null}>\n            <div style={{ width: 300 }}>\n              <Image className=\"is-centered\" src={header_logo} />\n            </div>\n          </Columns.Column>\n        </Columns>\n      </Hero.Body>\n    </Hero>\n  );\n};\n\nexport default Banner;\n","import Register from './Register';\n\nconst RegisterRoute = [\n  {\n    path: '/register',\n    exact: true,\n    component: Register\n  }\n];\n\nexport default RegisterRoute;\n","import React, { Component } from 'react';\n\nimport Button from 'react-bulma-components/lib/components/button';\nimport {\n  Control,\n  Field,\n  Input\n} from 'react-bulma-components/lib/components/form';\nimport Modal from 'react-bulma-components/lib/components/modal';\nimport Section from 'react-bulma-components/lib/components/section';\nimport { Auth } from '../../../api';\nimport Container from 'react-bulma-components/lib/components/container/container';\nimport Columns from 'react-bulma-components/lib/components/columns/columns';\nimport Heading from 'react-bulma-components/lib/components/heading';\nimport Banner from '../../../components/Banner';\nclass Register extends Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n    modal_display: false,\n    modal_message: ''\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onSubmit = event => {\n    event.preventDefault();\n    Auth.postRegister(\n      this.state.name,\n      this.state.email,\n      this.state.password\n    ).then(result => {\n      if (result.error) {\n        this.setState({ modal_message: result.error.errors[0].message });\n        this.setState({ modal_display: true });\n      } else {\n        window.location = '/main-lobby';\n      }\n    });\n  };\n\n  onModalClick = event => {\n    this.setState({ modal_display: false });\n  };\n\n  componentWillMount() {\n    Auth.getRegister().then(response => {\n      if (response.ok) {\n        window.location = '/main-lobby';\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Container className=\"is-fullhd\">\n        <Banner />\n        <Modal\n          show={this.state.modal_display}\n          onClose={this.onModalClick}\n          closeOnEsc={true}\n          closeOnBlur={true}\n        >\n          <Modal.Content\n            style={{ backgroundColor: 'white' }}\n            onClick={this.onModalClick}\n          >\n            <Section className=\"has-text-centered has-text-danger is-size-4\">\n              {this.state.modal_message}\n            </Section>\n          </Modal.Content>\n        </Modal>\n        <form onSubmit={this.onSubmit}>\n          <Columns className=\"is-centered\">\n            <Columns.Column className=\"is-3\">\n              <Heading className=\"has-text-centered has-text-black\">\n                Register\n              </Heading>\n              <Field>\n                <Control className=\"control-padding-vertical\">\n                  <Input\n                    name=\"name\"\n                    type=\"text\"\n                    onChange={this.onChange}\n                    value={this.state.name}\n                    placeholder=\"Type your in-game name\"\n                  />\n                </Control>\n              </Field>\n\n              <Field>\n                <Control>\n                  <Input\n                    name=\"email\"\n                    type=\"email\"\n                    onChange={this.onChange}\n                    value={this.state.email}\n                    placeholder=\"Type your email\"\n                  />\n                </Control>\n              </Field>\n\n              <Field>\n                <Control>\n                  <Input\n                    name=\"password\"\n                    type=\"password\"\n                    onChange={this.onChange}\n                    value={this.state.password}\n                    placeholder=\"Type your password\"\n                  />\n                </Control>\n              </Field>\n              <Field>\n                <Control>\n                  <Button className=\"is-info is-fullwidth\">Send</Button>\n                </Control>\n              </Field>\n            </Columns.Column>\n          </Columns>\n        </form>\n      </Container>\n    );\n  }\n}\n\nexport default Register;\n","import Login from './Login';\n\nconst LoginRoute = [\n  {\n    path: '/login',\n    exact: true,\n    component: Login\n  }\n];\n\nexport default LoginRoute;\n","import React, { Component } from 'react';\n\nimport Button from 'react-bulma-components/lib/components/button';\nimport {\n  Control,\n  Field,\n  Input\n} from 'react-bulma-components/lib/components/form';\nimport Modal from 'react-bulma-components/lib/components/modal';\nimport Section from 'react-bulma-components/lib/components/section';\nimport Columns from 'react-bulma-components/lib/components/columns/columns';\nimport Container from 'react-bulma-components/lib/components/container';\nimport Heading from 'react-bulma-components/lib/components/heading';\nimport Icon from 'react-bulma-components/lib/components/icon';\nimport Banner from '../../../components/Banner';\n\nimport { Auth } from '../../../api';\n\nclass Login extends Component {\n  state = {\n    email: '',\n    password: '',\n    modal_display: false,\n    modal_message: ''\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onSubmit = event => {\n    event.preventDefault();\n    Auth.postLogin(this.state.email, this.state.password).then(result => {\n      if (result.error) {\n        this.setState({\n          modal_message: 'Invalid email & password combination'\n        });\n        this.setState({ modal_display: true });\n      } else {\n        window.location = '/main-lobby';\n      }\n    });\n  };\n\n  onModalClick = _ => {\n    this.setState({ modal_display: false });\n  };\n\n  componentWillMount() {\n    Auth.getLogin().then(response => {\n      if (response.ok) {\n        window.location = '/main-lobby';\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Container className=\"is-fullhd\">\n        <Banner />\n        <Modal\n          show={this.state.modal_display}\n          onClose={this.onModalClick}\n          closeOnEsc={true}\n          closeOnBlur={true}\n        >\n          <Modal.Content\n            style={{ backgroundColor: 'white' }}\n            onClick={this.onModalClick}\n          >\n            <Section className=\"has-text-centered has-text-danger is-size-4\">\n              {this.state.modal_message}\n            </Section>\n          </Modal.Content>\n        </Modal>\n        <form onSubmit={this.onSubmit}>\n          <Columns className=\"is-centered\">\n            <Columns.Column className=\"is-3 \">\n              <Heading className=\"has-text-centered has-text-black\">\n                Login\n              </Heading>\n              <Field>\n                <Control className=\"has-icons-left\">\n                  <Icon icon=\"\" color=\"info\" />\n                  <Input\n                    name=\"email\"\n                    type=\"email\"\n                    onChange={this.onChange}\n                    value={this.state.email}\n                    placeholder=\"Type your email\"\n                  />\n                </Control>\n              </Field>\n              <Field>\n                <Control>\n                  <Input\n                    name=\"password\"\n                    type=\"password\"\n                    onChange={this.onChange}\n                    value={this.state.password}\n                    placeholder=\"Type your password\"\n                  />\n                </Control>\n              </Field>\n              <Field>\n                <Control>\n                  <Button className=\"is-info is-fullwidth\">Send</Button>\n                </Control>\n              </Field>\n              <p>\n                <a href=\"/register\">register</a>\n                &nbsp;·&nbsp;\n                <a href=\"/forgot-password\">forgot password</a>\n              </p>\n            </Columns.Column>\n          </Columns>\n        </form>\n      </Container>\n    );\n  }\n}\n\nexport default Login;\n","import ForgotPassword from './ForgotPassword';\n\nconst ForgotPasswordRoute = [\n  {\n    path: '/forgot-password',\n    exact: true,\n    component: ForgotPassword\n  }\n];\n\nexport default ForgotPasswordRoute;\n","import React, { Component } from 'react';\nimport {\n  Field,\n  Control,\n  Input\n} from 'react-bulma-components/lib/components/form';\nimport Section from 'react-bulma-components/lib/components/section';\nimport Button from 'react-bulma-components/lib/components/button';\nimport Columns from 'react-bulma-components/lib/components/columns';\nimport Container from 'react-bulma-components/lib/components/container';\nimport Banner from '../../../components/Banner';\nimport Heading from 'react-bulma-components/lib/components/heading';\nimport Box from 'react-bulma-components/lib/components/box';\nimport { Auth } from '../../../api';\n\nclass ForgotPassword extends Component {\n  state = {\n    email: '',\n    error_message: null\n  };\n\n  onChange = evt => {\n    const value =\n      evt.target.type === 'checkbox' ? evt.target.checked : evt.target.value;\n    this.setState({\n      [evt.target.name]: value\n    });\n  };\n\n  onSubmit = evt => {\n    evt.preventDefault();\n    Auth.postForgotPassword(this.state.email).then(result => {\n      if (result.error) {\n        this.setState({\n          error_message: 'Invalid email'\n        });\n        this.setState({ modal_display: true });\n      } else {\n        window.location = '/';\n      }\n    });\n  };\n\n  render() {\n    const { email, error_message } = this.state;\n    return (\n      <Container className=\"is-fullhd\">\n        <Banner />\n        <Section>\n          <Container>\n            {error_message ? (\n              <div className=\"has-text-danger\">{error_message}</div>\n            ) : null}\n            <form onSubmit={this.onSubmit}>\n              <Columns className=\"is-centered\">\n                <Columns.Column className=\"is-two-fifths\">\n                  <Box className=\"has-background-light\">\n                    <Field>\n                      <Heading className=\"has-text-centered has-text-black\">\n                        Forgot Password\n                      </Heading>\n                      <Control>\n                        <Input\n                          name=\"email\"\n                          type=\"email\"\n                          onChange={this.onChange}\n                          placeholder=\"Email\"\n                          value={email}\n                        />\n                      </Control>\n                    </Field>\n                    <Field>\n                      <Control className=\"has-text-centered\">\n                        <Button>Submit</Button>\n                      </Control>\n                    </Field>\n                  </Box>\n                </Columns.Column>\n              </Columns>\n            </form>\n          </Container>\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default ForgotPassword;\n","import NewPassword from './NewPassword';\n\nconst NewPasswordRoute = [\n  {\n    path: '/new-password',\n    exact: true,\n    component: NewPassword\n  }\n];\n\nexport default NewPasswordRoute;\n","import React, { Component } from 'react';\nimport {\n  Field,\n  Control,\n  Input\n} from 'react-bulma-components/lib/components/form';\nimport Section from 'react-bulma-components/lib/components/section';\nimport Button from 'react-bulma-components/lib/components/button';\nimport Columns from 'react-bulma-components/lib/components/columns';\nimport Container from 'react-bulma-components/lib/components/container';\nimport Banner from '../../../components/Banner';\nimport Heading from 'react-bulma-components/lib/components/heading';\n\nclass NewPassword extends Component {\n  state = {\n    password: ''\n  };\n\n  onChange = evt => {\n    const value =\n      evt.target.type === 'checkbox' ? evt.target.checked : evt.target.value;\n    this.setState({\n      [evt.target.name]: value\n    });\n  };\n\n  onSubmit = evt => {\n    // TODO\n  };\n\n  render() {\n    const { password } = this.state;\n    return (\n      <Container className=\"is-fullhd\">\n        <Banner />\n        <Section>\n          <Container>\n            <Columns className=\"is-centered\">\n              <Columns.Column className=\"is-two-fifths\">\n                <form onSubmit={this.onSubmit}>\n                  <Field>\n                    <Heading className=\"has-text-centered has-text-black\">\n                      New Password\n                    </Heading>\n                    <Control>\n                      <Input\n                        name=\"password\"\n                        type=\"password\"\n                        onChange={this.onChange}\n                        value={password}\n                      />\n                    </Control>\n                  </Field>\n                  <Field>\n                    <Control className=\"has-text-centered\">\n                      <Button>Submit</Button>\n                    </Control>\n                  </Field>\n                </form>\n              </Columns.Column>\n            </Columns>\n          </Container>\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default NewPassword;\n","import MainRoute from './containers/Main/route';\nimport GameRoute from './containers/Game/route';\nimport GameLobbyRoute from './containers/Lobby/Game/route';\nimport MainLobbyRoute from './containers/Lobby/Main/route';\nimport ErrorRoute from './containers/Error/route';\nimport RegisterRoute from './containers/Auth/Register/route';\nimport LoginRoute from './containers/Auth/Login/route';\nimport ForgotPasswordRoute from './containers/Auth/ForgotPassword/route';\nimport NewPasswordRoute from './containers/Auth/NewPassword/route';\n\nconst routes = [\n  ...MainRoute,\n  ...GameRoute,\n  ...GameLobbyRoute,\n  ...MainLobbyRoute,\n  ...RegisterRoute,\n  ...LoginRoute,\n  ...ForgotPasswordRoute,\n  ...NewPasswordRoute\n].concat(ErrorRoute);\n\nexport default routes;\n","import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\n\nconst NotificationContext = React.createContext();\nconst NotificationConsumer = NotificationContext.Consumer;\n\nclass NotificationProvider extends Component {\n  state = {\n    notify: message => toast(message)\n  };\n\n  render() {\n    return (\n      <NotificationContext.Provider value={this.state}>\n        {this.props.children}\n      </NotificationContext.Provider>\n    );\n  }\n}\n\nexport { NotificationConsumer, NotificationProvider };\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { BrowserRouter } from 'react-router-dom';\nimport { renderRoutes } from 'react-router-config';\nimport routes from './routes';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { NotificationProvider } from './contexts/NotificationContext';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <NotificationProvider>\n          <BrowserRouter>{renderRoutes(routes)}</BrowserRouter>\n          <ToastContainer />\n        </NotificationProvider>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const socket = require('./socket');\nconst Auth = require('./Auth');\nconst Game = require('./Game');\nconst GameLobby = require('./GameLobby');\nconst MainLobby = require('./MainLobby');\n\nmodule.exports = {\n  socket,\n  Auth,\n  Game,\n  GameLobby,\n  MainLobby\n};","const requestConfiguration = (body = {}, method) => {\r\n    const config = {\r\n      method,\r\n      credentials: 'include',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n  \r\n    if (Object.keys(body).length > 0) {\r\n      config.body = JSON.stringify(body);\r\n    }\r\n    return config;\r\n  };\r\n  \r\n  const build_url = endpoint => {\r\n    return `/api${endpoint}`;\r\n  };\r\n  \r\nmodule.exports = (endpoint, body, method = 'post') =>\r\n    fetch(build_url(endpoint), requestConfiguration(body, method));","module.exports = response => {\r\n    if (response.ok) {\r\n        return response.text().then(data => JSON.parse(data));\r\n    }\r\n    return response;\r\n};","module.exports = __webpack_public_path__ + \"static/media/header_logo.90b2b56e.png\";","module.exports = __webpack_public_path__ + \"static/media/header_logo.90b2b56e.png\";"],"sourceRoot":""}